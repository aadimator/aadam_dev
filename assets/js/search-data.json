{
  
    
        "post0": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://aadam.dev/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://aadam.dev/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "PyTorch Scholarship Challenge from Facebook",
            "content": "I got accepted into the PyTorch Scholarship Challenge program, offered by Facebook, which focuses on teaching Deep Learning using the PyTorch framework. . There were two phases of this challenge. In Phase 1, they selected about 10,000 students worldwide to participate in the challenge. Out of those 10,000 students, only 300 would be selected for Phase 2, in which they’d have access to the complete Deep Learning Nanodegree for free. . As I was planning to learn the Pytorch framework and was looking for some amazing tutorials to get started, naturally I was very excited when I got selected into the Pytorch Scholarship Challenge Phase 1. My previous experience with Udacity’s Nanodegree programs was very rewarding in which I completed 3 Nanodegree programs, namely Machine Learning Engineer, Android Basics and Android Developer. But that was before they changed their pricing model, from monthly subscription to a one-time up-front payment system. After that, they also changed their teaching methods somewhat and instead of self-paced learning, they turned these Nanodegree programs into a schedule-based class type program. I wasn’t sure if I’d enjoy this as much, but I did, a lot. . The video content of the program was absolutely amazing, as always. The production quality, the teaching efficiency, the animations to easily understand the content, the topic selection, everything was spot on. The programming exercises also helped cement what we learned in the class. The final challenge made us realize how much we actually understood about the concepts and techniques taught in the course. . It was a fun experience. Now, all this, I expected beforehand, nothing extraordinary. This is all very great of course, but it wasn’t the main thing that blew my mind. What made this a memorable experience and quite unique frankly, was the social aspect and the engagement with the community. From the start of the class, the Udacity team created a Slack workspace for the participants of this challenge and encouraged everyone to participate in group discussions. There was a Facebook group as well, but I mostly used the Slack workspace, and I think so did most of the other students because it was fairly active all the time. It was hard to keep track of all the things and activities going on at a given moment but still, it was manageable. . A team of TAs and volunteers were always present to solve the queries of the students and help them out if they’re struggling with something, be it a concept taught in the course, a program, an environment error, cutting-edge new research and so on. I mean there were always interesting and informative conversations happening and the vibe of the whole community was very positive. . They also took several initiatives to further help the community, like Study Buddy, Mentor-ship program, study groups, workshops etc. Many study groups were made, based on the interests of the students, or their geographical location etc. Every weekend, the members of the study group would meet, either locally or through hangout, if they’re far apart, and discuss what they learned, ask questions, help-out each other. They would later on post their group selfies in the Facebook group which also motivated others to do so. You know how people are these days 😉 . A number of extra workshops were held as well, both by Udacity professionals as well as the student participants of the program. They would cover a wide range of topics. Some would explain the concepts taught in the course that the students were having a hard time understanding. Some would show how to debug or troubleshoot a certain kind of problem that the students are having. Some would explain other interesting topics, not covered in the course. Everybody was willing to help out each other and in the process, learn and grow, together as a community. . This social engagement aspect made a very positive impact on me. This will definitely be one of the most memorable and rewarding experiences of my life, given the toxicity of most of the online communities. . . I have good news as well, great news in fact. I got accepted into the Phase 2 program. I will be able to complete the Deep Learning Nanodegree program, which I was very very eager to do, but couldn’t afford. I am planning to blog about my experience with the Nanodegree as well as the content that I learn there. So, look out for some amazing tutorials and blog posts on Deep Learning and stay tuned. Wish me luck 🙂 .",
            "url": "https://aadam.dev/deep%20learning/reviews/udacity/2019/01/22/pytorch-scholarship-challenge-from-facebook.html",
            "relUrl": "/deep%20learning/reviews/udacity/2019/01/22/pytorch-scholarship-challenge-from-facebook.html",
            "date": " • Jan 22, 2019"
        }
        
    
  
    
        ,"post3": {
            "title": "Machine Learning with TensorFlow on Google Cloud Platform Specialization",
            "content": "Yeah, I know I’ve been inactive these past couple of months. I was busy with some other things and quite frankly, I wasn’t really in the mood to watch any more lectures or complete any more courses. I guess I was in the hibernation mode but hopefully that period is over now. . I came across this specialization from Google on Coursera, Machine Learning with TensorFlow on Google Cloud Platform Specialization, and I’ve got to say, I was really excited to stumble upon this one as I was struggling with understanding how to implement the Machine Learning models and techniques I’ve learned in courses like Machine Learning and Deep Learning Specialization, where the focus was on understanding the mathematical concepts behind these models and the tips and tricks to make them more efficient and to effectively train them, while in this specialization from Google, it seemed that there focus will be on using these models in a production environment. Just the thing I wanted. . I’ve finished first course in the specialization till now, How Google does Machine Learning, and I’m half way through the second course. In the first course, they introduced us to the Google Cloud Platform (GCP) and showed how to start a VM instance and how to use the Data Lab to quickly spin out an instance for Machine Learning and Data Science related tasks. We also completed a few labs to get hands-on practice with the GCP platform and to see how it all works. . . Although the lecture videos are very well made and informative, the thing that I love about this specialization is QwikLabs. The good people of Google have provided the students with free cloud credits in the form of QwikLabs so we could get hands-on practice with the GCP and try out what we are learning in the course. If we had to spend our own credits to try-out things in the GCP, then I’m positive that most of us would’ve just watched the videos and leave out practice for some other day. This initiative to give out sandbox environments for learning purposes is much appreciated. . I’ve been quite satisfied with this specialization up til now. The videos have been quite easy to follow Although they don’t go into the nitty gritty details about how the algorithms work on a mathematical level, but then again, that’s not the focus of this specialization. I’ll publish an article upon completing this specialization to tell you about my experience regarding this specialization. And yeah, one more thing, there will be a part two of this specialization also, at least that’s what they said. So, looking forward to that as well. Let’s see how it goes. Till then, Allah Hafiz. .",
            "url": "https://aadam.dev/machine%20learning/reviews/deep%20learning/2018/07/15/machine-learning-with-tensorflow-on-google-cloud-platform-initial-review.html",
            "relUrl": "/machine%20learning/reviews/deep%20learning/2018/07/15/machine-learning-with-tensorflow-on-google-cloud-platform-initial-review.html",
            "date": " • Jul 15, 2018"
        }
        
    
  
    
        ,"post4": {
            "title": "Resources for Learning Machine Learning",
            "content": "If you are interested in learning about Machine Learning, as everyone should be, I’ve compiled a list of resources that I’ve found to be quite valuable throughout my journey to become a Machine Learning Engineer. . Note: This isn’t supposed to be a complete list of resources for Machine Learning. You can find those on the web easily. This will only list the resources that I used and found valuable. . Books . Throughout my life, I’ve found books to be the most valuable resource that one could have in order to better understand a topic. Online courses are a good resource to give a general introduction to wet your appetite but in order to satisfy your craving to learn more and in detail, books are the best things you could ask for. . A Course in Machine Learning . . This books gives a general introduction to the different algorithms being used in the Machine Learning. Instead of relying heavily on math to explain the concepts, it uses ideas and models from the real-world. You can download this book for free although there is a catch, this book is a work in progress so some parts of the book and the algorithms might not have been written as of yet. But still, I highly recommend this book. . Machine Learning in Action . . This book follows a more hands-on approach with Python programs accompanying different Machine Learning algorithms to further solidify the concepts. I find this way of teaching more effective as one could easily test out different algorithms and experiment with them to see what works and how. I haven’t completed this book as of yet but I’m planning to do so in the near future. . Courses . Though books provide an in-depth knowledge about a certain topic, they aren’t as effective as Video lectures when starting out. Video lectures are good for starting out in a new field or subject as they give a broad overview of the field and they are a more interactive medium for teaching about new concepts. . Udacity . The Machine Learning Nanodegree offered by Udacity is one of the best resource for learning Machine Learning. The video lectures are well-structured and easy to understand. And the most important thing is the Projects that one have to complete in order to graduate from the Nanodegree. These projects help a lot in understanding the concepts that one is learning about by implementing them in some real-world scenario and seeing how it works. . You can also use Free Courses instead of buying the whole Nanodegree program which might be a little expensive for some. The only drawback is that you won’t have access to the Projects but you can watch the Courses begin taught in the Nanodegree, free of cost. . Coursera Machine Learning . This course, taught by Andrew Ng, is one of the few courses that manages to explain some of the most technical and math-heavy concepts in Machine Learning in an intuitive and easy-to-understand manner. Instead of shying away from using scary mathematical equations, it explains them in such a way that one starts wondering how come he didn’t get that before. . . I will update this as I learn more resources, so keep an eye out for more goodies. .",
            "url": "https://aadam.dev/machine%20learning/resources/course/2018/03/13/resources-to-start-machine-learning.html",
            "relUrl": "/machine%20learning/resources/course/2018/03/13/resources-to-start-machine-learning.html",
            "date": " • Mar 13, 2018"
        }
        
    
  
    
        ,"post5": {
            "title": "Coursera — Machine Learning Review",
            "content": "I’ve been meaning to finish this course for a while now but every time some other attraction caught my attention like some other MOOC or subject. I knew, because of the popularity and the numerous positive reviews, that this course is going to be a good one but every time, there came a new MOOC on some new subject that I’ve been waiting for and I rushed towards it. . . But now, as Andrew Ng released a new specialization on Deep Learning, which I am dying to start next, I was motivated enough to finish this course because I thought that this will prove to be an invaluable resource and a firm foundation for the topics that will be covered in the Deep Learning Specialization. . I was amazed to find out that this course has proven to be a lot more rewarding than I imagined it to be. All the material was carefully selected and intuitively explained. Andrew Ng is one of the best teachers that I’ve ever had the pleasure to learn from. His way of explaining difficult and complex concepts so easily and intuitively is extraordinary. A lot of topics, that were quite difficult to comprehend before, seemed so easy to understand after Andrew’s explanation that I wondered why I didn’t get it before. . Who is this for? . Is this course worth 11 Weeks of my life? What should I expect to get out of this course? . If you are serious about learning Machine Learning and want to dig deeper to understand the inner working of the algorithms, then this course is the perfect fit for you. This course is a lot older than most of the Machine Learning courses being offered today but it does a pretty good job of explaining the basic concepts in order to better understand the Machine Learning algorithms being used nowadays. . If you only want to get a general overview of how Machine Learning works and to learn some library or tool to perform basic Machine Learning tasks then you are better off using some other resource e.g. Machine Learning Engineer Nanodegree by Udacity. . It’s not that this course isn’t good or won’t benefit you, it’s just that it has a different audience in mind. It caters to more technical minded persons. It heavily uses Mathematics to explain the algorithms. You need to have a basic understanding of Linear Algebra and Calculus in order to make an intuition about the inner workings of the algorithms. All the assignments are in MATLAB, unlike most of the new Machine Learning courses which use Python. . . I highly recommend this course as this was very beneficial for me. I learned a lot of new things and most of all, it cleared a lot of confusions and misconceptions that I had about some learning algorithms. I knew how to use those algorithms but I didn’t understand how they were working. Just like using a magic spell, I replicated what someone else said would work without understanding why this is working which frustrated me a lot. This course demystified a lot of things for me. Now I’ll be able to use Machine Learning techniques and algorithms knowing why and how this is working which will help me a lot in experimenting with new techniques and testing out new ideas. . I’m still confused about some algorithms, more specifically the back-propagation algorithm, but in my defense, it is one of the most complex algorithms in Machine Learning according to Andrew Ng. I understand intuitively how and why back-propagation works but I’m a little confused about the Maths behind the algorithm. Guess I have to watch the videos again, once or twice. . . I’ve started the Deep Learning Specialization also offered by Andrew Ng on Cousera. I’m on the last week of Neural Networks and Deep Learning, the first course in the specialization. I’ll tell you about my experience with this course in the upcoming post, Insha Allah. .",
            "url": "https://aadam.dev/machine%20learning/reviews/coursera/2017/08/30/coursera-machine-learning-review.html",
            "relUrl": "/machine%20learning/reviews/coursera/2017/08/30/coursera-machine-learning-review.html",
            "date": " • Aug 30, 2017"
        }
        
    
  
    
        ,"post6": {
            "title": "Learning Machine Learning",
            "content": "A while back, I started the Deep Learning course provided by fast.ai and after going through the first few lessons, I felt like I needed to brush up on my Machine Learning skills first if I want to get a deeper understanding of the Deep Learning. It wasn’t that they were going at an extra pace or were covering hard mathematical problems and complex algorithms, but they did require us to learn some material on our own, by reading articles or watching some videos or simulations etc. . Anyways, I decided to put the fast.ai course on hold for a while and complete a few courses on Machine Learning first. It’s not that I didn’t have any Machine Learning experience before taking that course. . . I’ve completed the Machine Learning Nanodegree offered by Udacity. It was an amazing experience as I learned a lot of new things and had some hands-on experience, with the problems we face in machine learning and the libraries, tools and the algorithms that are mostly used to solve those problems, by completing several projects. My Capstone Project was related to a Computer Vision problem, the famous dogs-vs-cats classification problem, and I solved it using CNN. So, I had a little bit of experience with Deep Learning as well. . Nonetheless, I still wanted to explore Machine Learning a bit further and to get more comfortable with it. I had a few courses on my mind that were better suited for my situation and on top was the Machine Learning course taught by Andrew Ng. I had started this course half an year ago, but because of some forgettable reasons, I wasn’t able to complete it. . This was the perfect course for me as I had some experience with Machine Learning but I didn’t fully understand some of the algorithms and the techniques we used. This course provided just that, a little more detail as to why we do such and such and why and how this works. The teaching style of Andrew Ng was phenomenal, the way he could explain difficult concepts without dumbing them down. . You can’t imagine my surprise when I found out today that Andrew Ng released 5 new courses on Deep Learning, the Deep Learning Specialization. . . Given the quality of the first Machine Learning course by Andrew Ng and the positive feedback it got, chances are that this specialization is going to be quite amazing as well. . This gave me extra motivation to complete the Machine Learning course first and then delve into this specialization to whet my appetite. By looking at the first two weeks, I am positive that this is going to be a very rewarding experience for me. .",
            "url": "https://aadam.dev/machine%20learning/reviews/udacity/coursera/2017/08/12/learning-machine-learning.html",
            "relUrl": "/machine%20learning/reviews/udacity/coursera/2017/08/12/learning-machine-learning.html",
            "date": " • Aug 12, 2017"
        }
        
    
  
    
        ,"post7": {
            "title": "Begin Robotics — First Week Review",
            "content": "After dabbling in Machine Learning and Deep Learning for a few months, I’ve decided to dip my toes into the field of Robotics. My favorite pastime is to learn about new things and to explore the uncharted territory. For now, my heart is set on learning about the Robots, getting a general overview as to how they perform their functions and how to train and build a robot. . I’m not very enthusiastic about the hardware side of the robots but the software, the soul that drives them. In order to create better software for the robots, having a broad overview of their workings is imperative. For that purpose, I decided to take a few introductory courses on robotics. . After checking out several courses on Class Central, I chose Begin Robotics because it seemed to be perfect for me, just the right amount of information. It wasn’t focused on just a single aspect, hardware or software, but how different pieces interact with one another. No prior knowledge was required and no hardware or software was necessary to complete the course. Furthermore, the quality of the course also seemed to be better than some other MOOCs. . . After completing the first week, I’m happy that I chose this course. The quality of the content is remarkable without being too technical and hard to understand. Their teaching methodology is incredible, some well thought-out video lectures to lure you in, a few articles to whet your appetite, and to top it off the interactive exercises work wonders. . These interactive exercises are very beneficial in order to understand the concepts taught in the lectures. By tweaking some variables and observing how it affects the performance and behavior of the robots, one gets a good understanding of the underlying principles. Besides a few UX problems, I’ve been content with these exercises, loving them even. . Another thing that I find helpful is the community there. Most of the discussions there are very insightful and have a positive vibe which encourages participation. This is my first MOOC from FutureLearn and I find their site design to be more user-friendly than Coursera and EdX, especially their discussion forum feature. Unlike Coursera, where we have to go to separate discussion form and search in separate threads, all the discussions related to a certain video or article are right there on the same page in FutureLearn. The Coursera discussion forms also have their own importance and their organization structure is also good but I find the FutureLearn’s discussion forms structure to be easier and more helpful. . I am quite optimistic that this MOOC will be an amazing experience for me. I’ll learn a lot of new things and have a lot of fun along the way. .",
            "url": "https://aadam.dev/reviews/course/2017/08/01/begin-robotics-first-week-review.html",
            "relUrl": "/reviews/course/2017/08/01/begin-robotics-first-week-review.html",
            "date": " • Aug 1, 2017"
        }
        
    
  
    
        ,"post8": {
            "title": "Odoo — Wkhtmltopdf Installation",
            "content": "Recently, as I was working on Odoo, I came across a problem when I wanted to print a report. It was generating the HTML report just fine but when I wanted to download that report, it was having difficulty converting that report into PDF. Basically, the version of wkhtmltopdf library wasn’t compatible with the current setup. . I tried various solutions that I could find on the internet but none worked for me except the one I’m about to document here. Most of the solutions suggested that installing the wkhtmltopdf version 0.12.1, which is the recommended version from Odoo, would solve the issue but I wasn’t able to install it either as I was using Ubuntu 16.04 and some of the dependencies that were required to install the library weren’t supported. . Here’s what worked for me: . First of all, remove the previous version of wkhtmltopdf that’s already installed on your system. | . sudo apt-get remove wkhtmltopdf sudo apt-get autoremove . Then go to the official site of wkhtmltopdf and download the latest version from there. | . wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.4/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz . After that, unzip the file using this command. | . tar -xf {file_name} . Now, copy the files from the extracted folder into the /usr/bin/ as this is the directory where Odoo looks for wkhtmltopdf. | . sudo cp wkhtmltox/bin/wkhtmltoimage /usr/bin/ sudo cp wkhtmltox/bin/wkhtmltopdf /usr/bin/ . Restart your Odoo Server now. Everything should be working fine. | . By following these steps, I was able to solve the problem at hand and hopefully, these will work for you too. Do let me know if it works. .",
            "url": "https://aadam.dev/setup/2017/07/25/odoo-wkhtmltopdf-installation.html",
            "relUrl": "/setup/2017/07/25/odoo-wkhtmltopdf-installation.html",
            "date": " • Jul 25, 2017"
        }
        
    
  
    
        ,"post9": {
            "title": "Fast.ai - Initial Thoughts",
            "content": "For a long time now, I’ve been planning to start learning about the deep learning, but whenever I start reading about it, either through books such as The MIT Press Deep Learning book, or through some online video or MOOCs, I get bombarded with strange mathematical formulas and complex equations. Of course this complex mathematics is quite necessary to understand Deep Learning models but it also repels a beginner from learning about this field, as a beginner is more result oriented. . If I was a PhD student and I was researching to make a specific algorithm perform better in some way, sure I’d have to learn about all those equations and formulas, but the reality is, I’m not, for now. I am just a curious student, who’d like to get a general overview about how Deep Learning works and build some apps to test different models on the real world data. . But for a long time, most of the resources available to learn about Deep Learning were focusing on those PhD level students, quite boring and technical, with little to no practical projects whatsoever. So, whenever I tried starting this endeavor to learn about Deep Learning, just after a day or two, I’d get frustrated and abandon it altogether. . You can’t imagine my surprise when I learned about this course, fast.ai, taught by Jeremy Howard. The approach that they are using to teach Deep Learning is quite opposite to what’s being used elsewhere. Instead of diving deeper into the technicalities from the start, they are using a top-down code-first approach where they let the student experiment with different algorithms and techniques by implementing them to solve real world problems, like from Kaggle competitions etc, from the first lecture. . This is what I’ve been looking for all along. A way to ease into the Deep Learning field, experiment with different models, and when I get comfortable then delve deeper into the mathematics. . The main objective or the teaching strategy being followed by Jeremy in this course seems quite interesting and attractive but let’s see how effective it is and how well it is executed. . I’m hopeful that this is going to be an amazing experience for me, I’ll learn a lot and practice a lot. I’ll keep blogging about my experience taking this course, the things I liked, the things I didn’t, the problems I faced and solutions to those. Let’s see how it turns out. .",
            "url": "https://aadam.dev/reviews/course/2017/06/15/fast-ai-initial-thoughts.html",
            "relUrl": "/reviews/course/2017/06/15/fast-ai-initial-thoughts.html",
            "date": " • Jun 15, 2017"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://aadam.dev/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://aadam.dev/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}